@startuml DCL
Interface IBrakeBehavior <<Interface>>{
    +brake()
}

Class Brake {
    +brake()
}

Class BrakeWithABS {
    +brake()
}

Abstract Class Car {
    -brakeBehavior : IBrakeBehavior
    +applyBrake()
    +setBrakeBehavior(IBrakeBehavior brakeType)
}

Class Sedan{}
Class SUV{}


IBrakeBehavior <|.. Brake : est
IBrakeBehavior <|.. BrakeWithABS : est
Car <|-- SUV : est
Car <|-- Sedan : est
Car --> "1" IBrakeBehavior : utilise

@enduml



@startuml DS-carExample
title Diagramme de sÃ©quence CartExample
skinparam style strictuml
skinparam Handwritten true
skinparam BackgroundColor white
participant ":main" as m
participant "sedanCar:Sedan" as sedan
participant ":Brake" as brake
participant "suvCar:SUV" as suv
participant ":BrakeWithABS" as abs
participant "newBrake:Brake" as nbrake
m --> sedan**: create()
sedan --> brake**: create()
m -> sedan: applyBrake()
sedan -> brake: brake()

m --> suv**:create()
suv -->> abs**: create()
m->suv: applyBrake()
suv -> abs: brake()

m->nbrake**: create()
m->suv: setBrakeBehavior(newBrake)
m->suv: applyBrake()
suv -> nbrake: brake()


@enduml