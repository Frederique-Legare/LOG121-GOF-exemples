@startuml Diagramme de classe
skinparam style strictuml
 interface Iterable {
	 createIterator(): Iterateur
}
 interface Iterateur {
	 hasNext(): boolean
	 next(): Object
}

class MaCollection {
  MAX: int
  compteur: int
  tableau: Object[MAX]
  ajouter(Object o): void
  createIterator(): Iterateur
}

class UneAutreCollection{
    createIterator(): Iterateur

}
class MaCollection implements Iterable 

class MonClient {
	imprimer(Iterable unIterable): void
}


 class Item {
		suivant: Item
		donnee: Object
		
		Item(Object donnee): void 
	ajouter(Object o): void
	 createIterator(): Iterateur
   }

class UneAutreCollection{}   
	
class UneAutreCollectionIterateur {
		courantIterateur: Item
		hasNext(): boolean
	next(): Object
}

class UneAutreCollectionIterateur implements Iterateur
class MaCollectionIterateur implements Iterateur

class UneAutreCollection implements Iterable 

MaCollection *-- MaCollectionIterateur
UneAutreCollection *-- UneAutreCollectionIterateur

UneAutreCollection -up-> Item: debut
UneAutreCollection -u-> Item: courant

MonClient .-right-> Iterable: dependency
MaCollection -u-> "*" Item
@enduml

